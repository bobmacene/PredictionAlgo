@using PredictionAlgo.Models
@model IEnumerable<PredictionComparison>


@{
    ViewBag.Title = "All Previous Comparisons";
}

<div align="right">
    <div align="right" class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
            <li>@Html.ActionLink("Go to predictions comparisons for upcoming fixtures", "Index")
            <li>
        </ul>
    </div>
</div>

<h2>Prediction Comparison</h2>
<h4>Algorithm Overall Prediction Success Rate: @ViewData["SuccessRate"] %</h4>



<div align="right">
    <input type="button" class="btn btn-info" value="Update Previous Comparisons"
           onclick="@("window.location.href='" + @Url.Action("AllPreviousComparisons",
                          new {id= "id"}) + "'"); " />
    <h5>Click above button to update predictions if TBD values exist (will only update if matches have been played)</h5>
</div>


@{
    var rowCount = 1;

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FixtureDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeam)
            </th>
            <th title="Score difference as predicted by bookmaker online">
                @Html.DisplayNameFor(model => model.HomeSpread)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeam)
            </th>
            <th title="Score difference as predicted by bookmaker online">
                @Html.DisplayNameFor(model => model.AwaySpread)
            </th>
            <th title="Score difference as predicted by PredictionAlgo">
                @Html.DisplayNameFor(model => model.PredictionDelta)
            </th>
            <th title="Actual score difference once match is played">
                @Html.DisplayNameFor(model => model.ActualScoreDelta)
            </th>
            <th title="Team PerdictionAlgo recommended to beat bookmaker spread">
                @Html.DisplayNameFor(model => model.TeamToBack)
            </th>
            <th title="Success means PredictionAlgo recommended correct team to back">
                @Html.DisplayNameFor(model => model.PredictionResult)
            </th>
            <th></th>
        </tr>



        @foreach (var item in Model)
        {
            rowCount = rowCount == 1 ? 0 : 1;

            if (rowCount == 0)
            {
                <tr style="background-color: #f9f9f9">
                    <td>
                        @Html.DisplayFor(modelItem => item.FixtureDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeTeam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeSpread)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AwayTeam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AwaySpread)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PredictionDelta)
                    </td>
                    <td>
                    @if (item.ActualScoreDelta == -1000)
                    {
                         @:TBD
                    }
                    else
                    {
                         @Html.DisplayFor(modelItem => item.ActualScoreDelta)
                    }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TeamToBack)
                    </td>
                    @if (item.PredictionResult == PredictionOutcome.Success)
                    {
                        <td style="background-color: #dcf2de">
                            @Html.DisplayFor(modelItem => item.PredictionResult)
                        </td>
                    }
                    else
                    {
                        <td style="background-color: #eacccd">
                            @Html.DisplayFor(modelItem => item.PredictionResult)
                        </td>
                    }
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FixtureDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeTeam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeSpread)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AwayTeam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AwaySpread)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PredictionDelta)
                    </td>
                    <td>
                        @if (item.ActualScoreDelta == -1000)
                        {
                            @:TBD
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.ActualScoreDelta)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TeamToBack)
                    </td>
                    @if (item.PredictionResult == PredictionOutcome.Success)
                    {
                        <td style="background-color: #dcf2de">
                            @Html.DisplayFor(modelItem => item.PredictionResult)
                        </td>
                    }
                    else
                    {
                        <td style="background-color: #eacccd">
                            @Html.DisplayFor(modelItem => item.PredictionResult)
                        </td>
                    }
                </tr>
            }
        }

    </table>
}


